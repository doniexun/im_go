package ims

import (
	"im_go/libs/bufio"
	"im_go/libs/proto"
	"net"
	"sync/atomic"
)

type Connection struct {
	conn 		*net.TCPConn

	reader 	*bufio.Reader	//读取
	writer 	*bufio.Writer	//输出
	msg   	*Message
	closed 		int32

	online 		bool

	tc     		int32 //write channel timeout count


	appId     	int64
	uId       	int64
	deviceId 	string
	deviceID 	int64 //generated by device_id + platform_id
	platformId 	int8

	count 		int32
}

func (client *Connection)bufPrepare()  {
	reader := bufio.NewReaderSize(client.conn,int(proto.MaxPackSize))
	writer := bufio.NewWriter(client.conn)
	client.reader = reader
	client.writer = writer
	client.msg = new(Message)
}


func (client *Connection)read()(*Message,error)  {
	err := client.msg.ReadTCP(client.reader)
	return client.msg,err
}

func (client *Connection)close()  {
	atomic.StoreInt32(&client.closed, 1)
}


